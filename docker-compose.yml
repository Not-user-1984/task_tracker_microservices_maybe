version: '3.8'

services:
  # db:
  #   image: postgres:14
  #   container_name: postgres_db  
  #   restart: always
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   env_file:
  #     - .env
  #   networks:
  #     - my_network    

  # redis:
  #   image: redis:latest
  #   container_name: redis
  #   command: redis-server --bind 0.0.0.0
  #   restart: always
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - my_network

  user_team_service:
    build: user_team_service/.
    container_name: user_team_service

    volumes:
      - ./user_team_service:/app
      - ./user_team_service/staticfiles:/app/staticfiles 
    ports:
      - "8000:8000"
    # depends_on:
    #   - db
    #   - redis
    env_file:
      - .env
    networks:
      - my_network

  # task_meeting_service:
  #   build:  docker/fast_api/.
  #   container_name: task_meeting_service
  #   volumes:
  #     - ./fast_api:/app
  #   ports:
  #     - "8001:8001"
  #   depends_on:
  #     - db
  #     - redis
  #     - web
  #   env_file:
  #     - .env
  #   networks:
  #     - my_network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./user_team_service/static:/app/static
    depends_on:
      - user_team_service
      # - fastapi
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

# volumes:
#   postgres_data:
#   redis_data: